openapi: 3.0.0
info:
  title: sample service
  version: "1.0"
tags:
  - name: User
  - name: Review
paths:
  /me:
    get:
      tags:
        - User
      operationId: Me_read
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
  /reviews:
    get:
      tags:
        - Review
      operationId: Reviews_list
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
    post:
      tags:
        - Review
      operationId: Reviews_create
      parameters: []
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_task:
                  $ref: "#/components/schemas/Review"
              required:
                - new_task
  /reviews/{id}:
    get:
      tags:
        - Review
      operationId: EachTask_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
    put:
      tags:
        - Review
      operationId: EachTask_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                update_task:
                  $ref: "#/components/schemas/Review"
              required:
                - update_task
    delete:
      tags:
        - Review
      operationId: EachTask_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted_task_id:
                    type: string
                required:
                  - deleted_task_id
components:
  schemas:
    Review:
      type: object
      required:
        - id
        - title
        - content
        - added_at
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        added_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
    UserRole:
      type: string
      enum:
        - ADMIN
        - COMMON
