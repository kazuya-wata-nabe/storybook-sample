# 参考:
#   https://storybook.js.org/docs/writing-tests/test-runner#run-against-non-deployed-storybooks
#   https://dev.to/ayomiku222/how-to-cache-playwright-browser-on-github-actions-51o6
name: "Storybook Tests"
on:
  # push:
  #   branches:
  #     - 'main'
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: corepack enable
        shell: bash

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      - name: Install dependencies
        shell: bash
        run: pnpm install
        env:
          HUSKY: 0

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(pnpm list @playwright/test | grep @playwright | sed 's/.* //')" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          pnpm playwright install --with-deps &&
          pnpm playwright install-deps

      - name: Build Storybook
        run: pnpm storybook:build --quiet

      - name: Serve Storybook and run tests
        run: |
          pnpm dlx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "pnpm dlx http-server storybook-static --port 6006 --silent" \
            "pnpm dlx wait-on tcp:6006 && pnpm test:story"
